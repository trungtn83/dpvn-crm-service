plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'maven-publish'
}

group = 'com.dpvn'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencies {
    implementation('com.dpvn:dpvn-shared:0.0.1-SNAPSHOT')
    implementation 'com.dpvn:dpvn-report-crud-service:0.0.1-SNAPSHOT'
    implementation 'com.dpvn:dpvn-kiotviet-service:0.0.1-SNAPSHOT'
    implementation 'com.dpvn:dpvn-thuocsi-service:0.0.1-SNAPSHOT'
    implementation 'com.dpvn:dpvn-crm-crud-service:0.0.1-SNAPSHOT'
    implementation 'com.dpvn:dpvn-wms-crud-service:0.0.1-SNAPSHOT'
    implementation 'com.dpvn:dpvn-webhook-handler-service:0.0.1-SNAPSHOT'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.session:spring-session-data-redis'

    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation 'org.apache.commons:commons-text:1.14.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.modelmapper:modelmapper:3.2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

spotless {
    java {
        target '**/*.java'
        googleJavaFormat("1.22.0")
        importOrder()
        toggleOffOn('/*', '*/')
    }
}

task domainJar(type: Jar) {
    from(sourceSets.main.output) {
        include 'com/dpvn/crm/domain/**'
        include 'com/dpvn/crm/voip24h/domain/**'
    }

    manifest {
        attributes(
                'Main-Class': 'com.dpvn.crm.CrmApplication'
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact domainJar
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    if (project.hasProperty('jarName')) {
        archiveBaseName = project.getProperty('jarName')
        archiveVersion = '' // Set version to empty to exclude version from the JAR name
    }
    manifest {
        attributes(
                'Implementation-Title': archiveBaseName,
                'Implementation-Version': archiveVersion
        )
    }
}
